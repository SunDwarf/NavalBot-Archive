# Help keys.
help.None: |
        This command does not have help in this language.

help.help: |
        Show help for a command.

help.set_config: |
        Sets a server-specific configuration value.

        If you have spaces in either of your arguments, they must be surrounded by "quotation marks".

help.get_config: |
        Gets a server specific configuration value.

        If you have a space in your argument, it must be surrounded by "quotation marks".

help.avatar: |
        Changes the avatar of the bot.
        You must give one argument providing the URL of the avatar to change to.
        This command is owner-only.

help.changename: |
        Changes the **username** of the bot.
        Takes the name as an argument.
        This command is owner-only.

help.add_role_override: |
        Adds a role override to a command.
        This takes the command and the role as an argument.
        This allows anybody with the role specified to run this command.
        You can enable a command for everybody by adding a role override for `@ everybody` (without the space.).

help.remove_role_override: |
        Removes a role override from a command.
        This takes the command, and the role, as an argument.

help.lock: |
        Locks a factoid so that nobody can edit it but the owner.

        Please note that admins can still unlock and edit the factoids even when locked.

help.delete_factoid: |
        Deletes a factoid.

        If the factoid is locked, only the owner or an admin can delete it.

help.unlock: |
        Unlocks a factoid so it is editable by anybody.

help.factoids: |
        Shows factoids matching a specific pattern.

        This pattern is a Redis scan search pattern. For more information, see http://redis.io/commands/scan

help.factoid: |
        Just shows how to create a factoid.

help.version: |
        Shows the current version of the bot.

# core strings
core.cfg.setcfg_updated: ":heavy_check_mark: Config updated: `{name}` -> `{val}`"
core.cfg.no_such_config: ":x: Config val `{name}` has not been set."
core.cfg.cfg_deleted: ":heavy_check_mark: Config val `{name}` deleted."


core.cfg.avatar_changed: ":heavy_check_mark: Updated bot avatar."
core.cfg.avatar_invalid: ":x: Avatar was not valid."
core.cfg.name_changed: ":heavy_check_mark: Changed name to `{name}`."

core.cfg.bad_override: ":x: You must provide an existing command."

core.cfg_added_role_override: ":heavy_check_mark: Added role override for command {cmd}."
core.cfg_removed_role_override: ":heavy_check_mark: Removed role override for command {cmd}."

core.version.base: "Version **{ver}**, written by SunDwarf (https://github.com/SunDwarf) and shadow (https://github.com/ilevn)"
core.version.no_dl: ":grey_exclamation: Could not download version information."
core.version.new_ver: ":exclamation: *New version available:* **{ver}**"
core.version.local_newer: ":grey_exclamation: *You are running a newer version than the one available online ({ver}).*"
core.version.same: ":grey_exclamation: *You are running the latest version.*"

core.factoids.nonexistant: ":x: Factoid `{fac}` does not exist."
core.factoids.nexist_or_nlock: ":x: Factoid `{fac}` does not exist or is not locked."
core.factoids.cannot_edit: ":x: Cannot edit factoid {fac}, it is locked to user `{u}`."

core.factoids.locked: ":heavy_check_mark: Factoid `{fac}` locked to user `{u}`."
core.factoids.deleted: ":heavy_check_mark: Factoid `{fac}` deleted."
core.factoids.unlocked: ":heavy_check_mark: Factoid `{fac}` unlocked."

core.factoids.match.header: "Matched factoids:"
core.factoids.match.none: "`Nothing found using that pattern.`"

core.factoids.set: ":heavy_check_mark: Factoid `{name}` is now `{content}`."

core.factoids.bad_args: ":heavy_check_mark: You did not pass all arguments to the factoid."

core.ndc.not_loaded: ":x: Module is not loaded."
core.ndc.reload_success: ":heavy_check_mark: Reloaded module."
core.ndc.reload_all: ":heavy_check_mark: Reloaded all."
core.ndc.plugins_base: "**Currently loaded plugins:**"
core.ndc.plugins: "\n`{name}`"
core.ndc.globalblacklist: ":warning: Are you sure? Type `y` to proceed."
core.ndc.globalblacklist_abort: ":x: Aborting global blacklist."
core.ndc.globalblacklist_success: ":gun: Okay, user `{u}` has been banned from using the bot."
core.ndc.globalunblacklist: ":angel: User `{u}` has repented their sins."

# Permissions keys
perms.not_owner: ":no_entry: This command is restricted to the bot owner."
perms.cannot_determine_role: ":no_entry: Cannot determine your role!"
perms.bad_role: ":no_entry: You do not have any of the required roles: `{roles}`!"

# Generic keys.
generic.not_int: ":x: Value {val} is not a valid integer."
generic.file_too_big: ":x: File {fname} is too big to download."
generic.no_mention: ":x: You must mention a user."
generic.cannot_find_user: ":x: Cannot find user `{user}`."
generic.cannot_find_command: ":x: Cannot find command `{cmd}`."
